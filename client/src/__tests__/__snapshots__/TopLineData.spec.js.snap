// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Top line data renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopLineData />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TopLineChart
        spendData={
          Array [
            Object {
              "x": "Aisle",
              "y": "0.01",
            },
          ]
        }
        totalCustsData={
          Array [
            Object {
              "x": "Aisle",
              "y": "0.04",
            },
          ]
        }
        unitsData={
          Array [
            Object {
              "x": "Aisle",
              "y": "0.02",
            },
          ]
        }
        visitsData={
          Array [
            Object {
              "x": "Aisle",
              "y": "0.03",
            },
          ]
        }
      />,
      "elevation": 3,
      "id": "topLineChart",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "spendData": Array [
          Object {
            "x": "Aisle",
            "y": "0.01",
          },
        ],
        "totalCustsData": Array [
          Object {
            "x": "Aisle",
            "y": "0.04",
          },
        ],
        "unitsData": Array [
          Object {
            "x": "Aisle",
            "y": "0.02",
          },
        ],
        "visitsData": Array [
          Object {
            "x": "Aisle",
            "y": "0.03",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TopLineChart
          spendData={
            Array [
              Object {
                "x": "Aisle",
                "y": "0.01",
              },
            ]
          }
          totalCustsData={
            Array [
              Object {
                "x": "Aisle",
                "y": "0.04",
              },
            ]
          }
          unitsData={
            Array [
              Object {
                "x": "Aisle",
                "y": "0.02",
              },
            ]
          }
          visitsData={
            Array [
              Object {
                "x": "Aisle",
                "y": "0.03",
              },
            ]
          }
        />,
        "elevation": 3,
        "id": "topLineChart",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "spendData": Array [
            Object {
              "x": "Aisle",
              "y": "0.01",
            },
          ],
          "totalCustsData": Array [
            Object {
              "x": "Aisle",
              "y": "0.04",
            },
          ],
          "unitsData": Array [
            Object {
              "x": "Aisle",
              "y": "0.02",
            },
          ],
          "visitsData": Array [
            Object {
              "x": "Aisle",
              "y": "0.03",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
